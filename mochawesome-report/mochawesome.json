{
  "stats": {
    "suites": 1,
    "tests": 5,
    "passes": 5,
    "pending": 0,
    "failures": 0,
    "start": "2024-01-15T09:11:46.418Z",
    "end": "2024-01-15T09:12:13.287Z",
    "duration": 26869,
    "testsRegistered": 5,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "39056109-5b9a-4b5b-b1bd-525cdf486980",
      "title": "",
      "fullFile": "D:\\EJALAS_TESTING\\tests\\homePage.test.js",
      "file": "\\tests\\homePage.test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c6288951-9d41-44f0-a93f-d897e2e34465",
          "title": "Home Page component Test",
          "fullFile": "D:\\EJALAS_TESTING\\tests\\homePage.test.js",
          "file": "\\tests\\homePage.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Home Page component Test\"",
              "fullTitle": "Home Page component Test \"before all\" hook in \"Home Page component Test\"",
              "timedOut": null,
              "duration": 1073,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "driver = new Builder()\n  .forBrowser(\"chrome\")\n  // .setChromeOptions(new chrome.Options().headless())\n  .build();\nawait driver.manage().window().setRect({ width: 1920, height: 1080 });",
              "err": {},
              "uuid": "b59edf43-71dc-44fc-abc7-60388ca8f126",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Home Page component Test\"",
              "fullTitle": "Home Page component Test \"after all\" hook in \"Home Page component Test\"",
              "timedOut": null,
              "duration": 115,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "await driver.quit();",
              "err": {},
              "uuid": "5db83859-945f-45f9-bb11-7714b177af45",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "home-page-test",
              "fullTitle": "Home Page component Test home-page-test",
              "timedOut": null,
              "duration": 6526,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  await driver.get(\"https://demo.ejalas.com/\");\n  // check if the date is displayed or not\n  const date = await driver.findElement(By.css(`.date span iframe`));\n  if (!date.isDisplayed())\n    throw new Error(\"The date is not displayed in home page\");\n  // home page broken image test.\n  await brokenImageTest(driver, \"https://demo.ejalas.com\");\n  const marquee = await driver.findElement(\n    By.xpath(`//*[@id=\"header-wrapper\"]/div/div[2]/div/marquee`)\n  );\n  // first check if the marquee if displayed or not\n  if (!(await marquee.isDisplayed()))\n    throw new Error(\"The marquee element/news slide is not displayed\");\n  // now check if the text message inside is present or not?\n  const marqueeText = await marquee.findElement(By.css(\"ul\")).getText();\n  if (marqueeText == 0)\n    throw new Error(\"The news-slide content is not displayed\");\n} catch (err) {\n  throw new Error(err);\n}",
              "err": {},
              "uuid": "9d130fdd-c2aa-4e4b-ac95-cb64e656b456",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "ujuri-case-search-result-fail-test",
              "fullTitle": "Home Page component Test ujuri-case-search-result-fail-test",
              "timedOut": null,
              "duration": 3944,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  await driver.get(\"https://demo.ejalas.com/tarikh\");\n  // target the input to search for the case number\n  // assume the case number is 123 which does not exists should give us error message\n  await driver.findElement(By.css(`form input`)).sendKeys(\"123\");\n  //target the button and search for it.\n  // here we should get the error message because we have an unregister case number\n  await driver.findElement(By.css(\"button\")).click();\n  // check if the error message pop up or not.\n  const errorElement = await driver.wait(\n    until.elementLocated(By.className(\"text-center alert alert-danger\"))\n  );\n  const errorText = await errorElement.getText();\n  if (errorText != \"मुद्दा नं को तारिख उपलब्ध छैन\")\n    throw new Error(\"Error in getting the error element\");\n  console.log(errorText);\n} catch (err) {\n  throw new Error(err);\n}",
              "err": {},
              "uuid": "621e3f42-ab4f-4ab6-8882-ddb8cb0c6fcb",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "ujuri-case-search-result-success-test",
              "fullTitle": "Home Page component Test ujuri-case-search-result-success-test",
              "timedOut": null,
              "duration": 3929,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  const code = \"sfj\";\n  await driver.get(\"https://demo.ejalas.com/tarikh\");\n  // target the input to search for the case number\n  // assume the case number is 123 which does not exists should give us error message\n  await driver.findElement(By.css(`form input`)).sendKeys(code);\n  //target the button and search for it.\n  // here we should get the error message because we have an unregister case number\n  await driver.findElement(By.css(\"button\")).click();\n  // here the case number is valid so it should contain some information except the error message\n  const tableElement = await driver.wait(\n    until.elementLocated(By.css(\"tbody tr\"))\n  );\n  const codeNumber = await tableElement\n    .findElement(By.css(\"td:last-child\"))\n    .getText();\n  if (codeNumber != code)\n    throw new Error(\n      \"The expected ujuri result didn't match with the code that we input\"\n    );\n} catch (err) {\n  throw new Error(err);\n}",
              "err": {},
              "uuid": "521c5b40-a17f-401a-b7bb-e6d61cf4978e",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "home-page about-us",
              "fullTitle": "Home Page component Test home-page about-us",
              "timedOut": null,
              "duration": 2550,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  await driver.get(\"https://demo.ejalas.com/hamro-barema\");\n  const textContainer = await driver.findElement(\n    By.className(\"hamro-barema-container\")\n  );\n  // check if the container is displayed or not.\n  if (!(await textContainer.isDisplayed()))\n    throw new Error(\"The container is not displayed in the page.\");\n  // check if the text is empty or not.\n  const text = await textContainer.getText();\n  if (text == \"\") throw new Error(\"The content in the page is not shown\");\n  console.log(await textContainer.getText());\n} catch (err) {\n  throw new Error(err);\n}",
              "err": {},
              "uuid": "d71855a8-9bf6-451f-acce-2e01b6a97bcb",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "conflict look-up test",
              "fullTitle": "Home Page component Test conflict look-up test",
              "timedOut": null,
              "duration": 8443,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const obj = {\n  select: \"जग्गा मिचि भवन निर्माण\",\n  date: \"2080-04-24\",\n};\nawait driver.get(\"https://demo.ejalas.com/index\");\n// first select the type of the type of case\nconst selectElement = await driver.findElement(\n  By.id(\"inlineFormCustomSelect\")\n);\nconst select = new Select(selectElement);\nselect.selectByVisibleText(obj.select);\n// now select the date of register case.\nawait driver\n  .findElement(By.className(\"nepali-datepicker ndp-nepali-calendar\"))\n  .sendKeys(obj.date);\n//submit the detail\nconst submitBtn = await driver.findElement(\n  By.className(\"common-case-btn section-content-item\")\n);\nawait driver.wait(until.elementIsVisible(submitBtn), 10000);\nawait driver.executeScript(\"arguments[0].click();\", submitBtn);\n// result will show according to the detail provided\n// check for the result\nconst targetElement = await driver.findElements(By.css(`tbody tr`));\n// check if the data is present or not it should not be empty\nconsole.log(targetElement.length);\nif (targetElement == 0)\n  throw new Error(\"The search result didn't match for the given input\");\nawait driver.sleep(3000);",
              "err": {},
              "uuid": "149470eb-42d8-425e-ae0b-2e2902e2c59b",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9d130fdd-c2aa-4e4b-ac95-cb64e656b456",
            "621e3f42-ab4f-4ab6-8882-ddb8cb0c6fcb",
            "521c5b40-a17f-401a-b7bb-e6d61cf4978e",
            "d71855a8-9bf6-451f-acce-2e01b6a97bcb",
            "149470eb-42d8-425e-ae0b-2e2902e2c59b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 25392,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}