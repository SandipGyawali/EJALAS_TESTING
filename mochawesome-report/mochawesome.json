{
  "stats": {
    "suites": 1,
    "tests": 2,
    "passes": 2,
    "pending": 0,
    "failures": 0,
    "start": "2024-01-16T13:53:13.362Z",
    "end": "2024-01-16T13:53:51.807Z",
    "duration": 38445,
    "testsRegistered": 2,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "046c9efc-cf53-4ee4-91cc-0fa3b5038195",
      "title": "",
      "fullFile": "D:\\EJALAS_TESTING\\tests\\userRole.test.js",
      "file": "\\tests\\userRole.test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "30ce5751-9fcb-4fea-a444-0e907f3855f7",
          "title": "user-role",
          "fullFile": "D:\\EJALAS_TESTING\\tests\\userRole.test.js",
          "file": "\\tests\\userRole.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"user-role\"",
              "fullTitle": "user-role \"before all\" hook in \"user-role\"",
              "timedOut": null,
              "duration": 421,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "driver = new Builder()\n  .forBrowser(\"chrome\")\n  .setChromeOptions(new chrome.Options().headless())\n  .build();",
              "err": {},
              "uuid": "200ee331-aaa6-41a2-b384-5d1758c17dad",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"user-role\"",
              "fullTitle": "user-role \"after all\" hook in \"user-role\"",
              "timedOut": null,
              "duration": 26,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "await driver.quit();",
              "err": {},
              "uuid": "e62f6831-159a-48b8-b9f9-58d0d6ec3c25",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "user-role-add-test",
              "fullTitle": "user-role user-role-add-test",
              "timedOut": null,
              "duration": 24269,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// first login to the page before starting the test\nawait driver.get(\"https://demo.ejalas.com/login\");\nawait login(driver);\nawait driver.get(\"https://demo.ejalas.com/admin/role\");\n// add the input tag enter name of role and submit\nconst inputELement = await driver.findElement(By.id(\"name\"));\nawait inputELement.sendKeys(role);\n// submit\nawait driver\n  .findElement(By.className(\"common-court-btn btn btn-success\"))\n  .click();\n// check at the last of the table body if the role has been added or not\nconst lastElement = await driver.wait(\n  until.elementLocated(By.css(\"tbody tr:last-child\"))\n);\n// now check if the user input role name is matched\nconst data = await lastElement\n  .findElement(By.css(`td:nth-child(2)`))\n  .getText();\nif (data != role) throw new Error(\"The user role is not added.\");",
              "err": {},
              "uuid": "284cf927-cadd-431f-96f5-c87d69fc20ca",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "user-role-test-edit",
              "fullTitle": "user-role user-role-test-edit",
              "timedOut": null,
              "duration": 13352,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.get(\"https://demo.ejalas.com/admin/role\");\n// edit the role\nconst element = await driver.findElement(By.css(\"tbody tr:last-child\"));\nconst editButtonWrapper = await element.findElement(\n  By.css(\"td:nth-child(3)\")\n);\nconst editBtn = await editButtonWrapper.findElement(By.css(`a`));\nawait driver.executeScript(\"arguments[0].click();\", editBtn);\n// target the input field and edit accordingly\nconst input = await driver.findElement(By.id(\"name\"));\nawait input.clear();\nawait input.sendKeys(role_edit);\n// now submit the change\nconst button = await driver.findElement(By.css(\"button\"));\nawait driver.executeScript(\"arguments[0].click();\", button);\n// now check if the edited section has been reflected or not\nconst lastElement = await driver.findElement(By.css(\"tbody tr:last-child\"));\nconst text = await lastElement\n  .findElement(By.css(\"td:nth-child(2)\"))\n  .getText();\nif (text != role_edit) throw new Error(\"The user role is not updated\");",
              "err": {},
              "uuid": "1a9c0910-9758-4610-8f7f-be2e2631f60a",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "284cf927-cadd-431f-96f5-c87d69fc20ca",
            "1a9c0910-9758-4610-8f7f-be2e2631f60a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 37621,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}