{
  "stats": {
    "suites": 9,
    "tests": 19,
    "passes": 19,
    "pending": 0,
    "failures": 0,
    "start": "2024-01-29T12:53:38.073Z",
    "end": "2024-01-29T12:54:19.555Z",
    "duration": 41482,
    "testsRegistered": 19,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "3ebcc294-e1a6-4189-9cfa-efa5a50de534",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "401a35b1-1f3f-4ed4-9935-e1d185d18e82",
          "title": "Conciliator test",
          "fullFile": "D:\\EJALAS_TESTING\\tests\\conciliatorRegister.test.js",
          "file": "\\tests\\conciliatorRegister.test.js",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Conciliator test\"",
              "fullTitle": "Conciliator test \"after all\" hook in \"Conciliator test\"",
              "timedOut": null,
              "duration": 52,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "await driver.quit();",
              "err": {},
              "uuid": "88af09f6-2697-4a38-831d-ec863727ef71",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "conciliator-inspection-verify test 501",
              "fullTitle": "Conciliator test conciliator-inspection-verify test 501",
              "timedOut": null,
              "duration": 18760,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  driver.get(\"https://demo.ejalas.com/login\");\n  // login\n  await login(driver);\n  // navigate to the url\n  await driver.get(\"https://demo.ejalas.com/admin/melmilapkarta-darta\");\n  // target the table data\n  const targetElement = await driver.findElement(\n    By.css(`tbody tr:first-child`)\n  );\n  // first get the data of the darta that you are going to vew\n  // this is the username that we want to vew the content of\n  const name = await targetElement.findElement(By.css(\"td\")).getText();\n  // now see the darta info by clicking on view/eye icon\n  const viewButton = await targetElement.findElement(\n    By.css(`:last-child a`)\n  );\n  await driver.executeScript(\"arguments[0].click();\", viewButton);\n  //now target the table and get the text and note the text should not be empty\n  // in most case, we consider the test that does contains the info in the table\n  const tableElement = await driver.wait(\n    until.elementLocated(By.css(\"tbody tr:first-child\"))\n  );\n  const tableName = await tableElement.findElement(By.css(\"td\")).getText();\n  if (name != tableName)\n    throw new Error(\n      \"The user name that we viewed the content of didn't match\"\n    );\n  if (name == tableName) {\n    // click reject or approved we check for the reject\n    const btn = await driver.findElement(\n      By.css(\".buttons-container a:last-child\")\n    );\n    driver.executeScript(\"arguments[0].click();\", btn);\n    // now check for the modification if the approval section is rejected\n    // target the element that we clicked previously\n    await driver.sleep(2000);\n    const targetElement = await driver.wait(\n      until.elementLocated(By.css(`tbody tr:first-child`))\n    );\n    const isChanged = await targetElement\n      .findElement(By.css(`td:nth-child(7)`))\n      .getText();\n    if (isChanged != \"अस्वीकार गरियो\")\n      throw new Error(\"conciliator registered was not rejected\");\n  }\n} catch (err) {\n  throw new Error(err);\n}",
              "err": {},
              "uuid": "cd5d2766-dab4-4607-ada0-7df7d0c1c32a",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cd5d2766-dab4-4607-ada0-7df7d0c1c32a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 18760,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "80970f95-3764-4f69-be57-e4c1bfb95cee",
          "title": "DashBoard-Test",
          "fullFile": "D:\\EJALAS_TESTING\\tests\\dashboard.test.js",
          "file": "\\tests\\dashboard.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"DashBoard-Test\"",
              "fullTitle": "DashBoard-Test \"before all\" hook in \"DashBoard-Test\"",
              "timedOut": null,
              "duration": 2101,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "driver = new Builder()\n  .forBrowser(\"chrome\")\n  .setChromeOptions(new chrome.Options().headless())\n  .build();\nawait driver.manage().window().setRect({ width: 1920, height: 1080 });",
              "err": {},
              "uuid": "67c558b9-96f0-46b5-a37e-6103925404e8",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"DashBoard-Test\"",
              "fullTitle": "DashBoard-Test \"after all\" hook in \"DashBoard-Test\"",
              "timedOut": null,
              "duration": 117,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "await driver.quit();",
              "err": {},
              "uuid": "2cb25978-d99b-41d3-ac24-71f7206d6eb1",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "dashboard-component test 451",
              "fullTitle": "DashBoard-Test dashboard-component test 451",
              "timedOut": null,
              "duration": 11577,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  await driver.get(\"https://demo.ejalas.com/login\");\n  await login(driver);\n  // checking the dashboard content\n  const contentElement = await driver.findElements(\n    By.className(\"number-of-cases-item\")\n  );\n  for (content of contentElement) {\n    const icon = await content.findElement(By.xpath(\".//i\")).isDisplayed();\n    const categoryText = await content.findElement(By.xpath(\".//h3\"));\n    const caseQuantity = await content.findElement(By.xpath(\".//span\"));\n    // test for the icon render in the component dashboard.\n    if (!icon)\n      throw new Error(\"Error: component icon not rendered in dashboard\");\n    // number of cases cannot be negative.\n    if ((await Number(caseQuantity)) <= 0 || caseQuantity == \"\")\n      throw new Error(\n        \"The number defined in the dashboard component is not displayed or inappropriate format\"\n      );\n    // text cannot be empty inside the component.\n    if (categoryText == \"\")\n      throw new Error(\n        \"The category text is not defined in the dashboard component\"\n      );\n  }\n} catch (err) {\n  throw new Error(err);\n}",
              "err": {},
              "uuid": "0d64a719-aa9e-455c-b179-ae564fd448df",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "dashboard-graph test 452",
              "fullTitle": "DashBoard-Test dashboard-graph test 452",
              "timedOut": null,
              "duration": 7906,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  await driver.get(\"https://demo.ejalas.com/login\");\n  await login(driver);\n  const chart = await driver.findElement(By.id(\"myChart\"));\n  // check if the canvas is displayed or not\n  if (!(await chart.isDisplayed())) {\n    throw new Error(\"Chart in dashboard not displayed\");\n  }\n  // check for the width and height of the canvas\n  const width = await chart.getAttribute(\"width\");\n  const height = await chart.getAttribute(\"height\");\n  console.log(width, height);\n  if (width <= 0 || height <= 0) {\n    throw new Error(\"Canvas width and height is improper\");\n  }\n} catch (err) {\n  throw new Error(err);\n}",
              "err": {},
              "uuid": "d0cc6448-7f8c-42f7-8273-87ba9f5bbd6f",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0d64a719-aa9e-455c-b179-ae564fd448df",
            "d0cc6448-7f8c-42f7-8273-87ba9f5bbd6f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 19483,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "6baf65bb-67e2-4fe9-803f-aea2772f2739",
          "title": "Login Test",
          "fullFile": "D:\\EJALAS_TESTING\\tests\\login.test.js",
          "file": "\\tests\\login.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Login Test\"",
              "fullTitle": "Login Test \"before all\" hook in \"Login Test\"",
              "timedOut": null,
              "duration": 2151,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "// headless options\ndriver = new Builder()\n  .forBrowser(\"chrome\")\n  .setChromeOptions(new chrome.Options().headless())\n  .build();\nawait driver.manage().window().setRect({ width: 1920, height: 1080 });",
              "err": {},
              "uuid": "5da00cc1-62b7-473e-b195-b0952fc41953",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Login Test\"",
              "fullTitle": "Login Test \"after all\" hook in \"Login Test\"",
              "timedOut": null,
              "duration": 78,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "await driver.quit();",
              "err": {},
              "uuid": "e4996182-dc63-42aa-b595-b8b2afab460c",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook in \"Login Test\"",
              "fullTitle": "Login Test \"after each\" hook in \"Login Test\"",
              "timedOut": null,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "const specificTestCases = [\"unsuccessful-login\"];\nif (\n  this.currentTest.state == \"passed\" &&\n  specificTestCases.includes(this.currentTest.title)\n) {\n  let imageFileName = this.currentTest.title + \".jpeg\";\n  driver.takeScreenshot().then(function (image) {\n    fs.writeFileSync(`./screenshots/${imageFileName}`, image, \"base64\");\n  });\n  // addContext is the method that is defined in the mocha awesome library\n  addContext(this, \"Following comes the test case screen shot.\");\n  addContext(this, `../screenshots/${imageFileName}`);\n}",
              "err": {},
              "uuid": "6ffacfd9-4a4b-4c1b-9840-b4d7dcaf86c8",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "successful-login 1",
              "fullTitle": "Login Test successful-login 1",
              "timedOut": null,
              "duration": 11051,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  await driver.get(\"https://demo.ejalas.com/login\");\n  // handles login operation\n  await login(driver);\n  try {\n    // to be more specific the url will be redirect to the admin/dashboard\n    // check for the url if it has been navigated or not.\n    await driver.wait(until.urlContains(data.navUrl));\n  } catch (err) {\n    console.log(err.message);\n  }\n} catch (err) {\n  throw new Error(err);\n}",
              "err": {},
              "uuid": "de722c64-37b6-4086-8ed5-d4a496d68ae7",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "unsuccessful-login 2",
              "fullTitle": "Login Test unsuccessful-login 2",
              "timedOut": null,
              "duration": 11031,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  await driver.get(\"https://demo.ejalas.com/login\");\n  // method handles the  login operation\n  await login(driver, data.user, `${data.password}sdf`);\n  // search for the error element if exists\n  const errorElement = await driver.wait(\n    until.elementLocated(By.className(\"alert alert-danger\")),\n    3000\n  );\n  // if the user and password are incorrect.\n  // error message element pops up\n  if (errorElement) {\n    const errorText = await errorElement.getText();\n    console.log(errorText);\n  }\n  // here the url will also not be redirected to the dashboard\n  // this is optional because the url is different for the different user based on the name/dashboard\n  await driver.wait(until.urlContains(data.navUrl), 3000);\n} catch (err) {\n  // here the occurrence error is for sure so check so we log the error message only,\n  console.log(`Error: ${err.message}`);\n}",
              "err": {},
              "uuid": "026c8de0-b828-4781-a6f6-c1389e10a390",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "de722c64-37b6-4086-8ed5-d4a496d68ae7",
            "026c8de0-b828-4781-a6f6-c1389e10a390"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 22082,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "aa0abed8-5d69-4ed7-8201-715321d68f4e",
          "title": "Department",
          "fullFile": "D:\\EJALAS_TESTING\\tests\\department.test.js",
          "file": "\\tests\\department.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Department\"",
              "fullTitle": "Department \"before all\" hook in \"Department\"",
              "timedOut": null,
              "duration": 695,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "driver = new Builder()\n  .forBrowser(\"chrome\")\n  // .setChromeOptions(new chrome.Options().headless())\n  .build();",
              "err": {},
              "uuid": "9ce53da8-20ca-4bbb-9366-2760b3a8db15",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Department\"",
              "fullTitle": "Department \"after all\" hook in \"Department\"",
              "timedOut": null,
              "duration": 215,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "await driver.quit();",
              "err": {},
              "uuid": "52e0ec27-f2ed-4d7e-8270-e6336e3daf51",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "add-department-test 401",
              "fullTitle": "Department add-department-test 401",
              "timedOut": null,
              "duration": 17327,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// login\nawait driver.get(\"https://demo.ejalas.com/login\");\nawait login(driver);\nawait driver.get(\"https://demo.ejalas.com/department\");\n// target the input and add the department\nawait driver.findElement(By.id(\"departmentName\")).sendKeys(\"test-data\");\n// submit\nawait driver\n  .findElement(By.className(\"common-court-btn btn btn-success\"))\n  .click();\n// now check if the element was successfully added or not\nconst lastElement = await driver.findElement(By.css(\"tbody tr:last-child\"));\nconst data = await lastElement\n  .findElement(By.css(\"td:nth-child(2)\"))\n  .getText();\nconsole.log(data);\nif (data != \"test-data\")\n  throw new Error(\"The input new department is not added\");",
              "err": {},
              "uuid": "aa46a16c-f478-4b31-a0f1-b7912c4e0ca1",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "edit-department existing dept 402",
              "fullTitle": "Department edit-department existing dept 402",
              "timedOut": null,
              "duration": 6431,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// get the last element of the table body\nconst lastElement = await driver.findElement(By.css(\"tbody tr:last-child\"));\n// edit btn target\nconst editBtnWrapper = await lastElement.findElement(\n  By.css(\"td:nth-child(3)\")\n);\nconst editBtn = await editBtnWrapper.findElement(By.css(\"a\"));\nawait driver.executeScript(\"arguments[0].click();\", editBtn);\n// now change the input\nconst input = await driver.findElement(By.id(\"departmentName\"));\nawait input.clear();\nawait input.sendKeys(\"test-data-modified\");\n// submit\nawait driver\n  .findElement(By.className(\"common-court-btn btn btn-success\"))\n  .click();\n// now check if the element is modified or not\nconst modifiedElement = await driver.findElement(\n  By.css(\"tbody tr:last-child\")\n);\nconst newData = await modifiedElement\n  .findElement(By.css(\"td:nth-child(2)\"))\n  .getText();\nif (newData != \"test-data-modified\")\n  throw new Error(\"The department input was not able to be edited.\");",
              "err": {},
              "uuid": "66fec16f-7776-453a-9c6b-92748e7bdc3f",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "aa46a16c-f478-4b31-a0f1-b7912c4e0ca1",
            "66fec16f-7776-453a-9c6b-92748e7bdc3f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 23758,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "a6c099a6-8d9d-40d4-92cd-6d7eb1e57403",
          "title": "Complain-Type Test",
          "fullFile": "D:\\EJALAS_TESTING\\tests\\complaintType.test.js",
          "file": "\\tests\\complaintType.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Complain-Type Test\"",
              "fullTitle": "Complain-Type Test \"before all\" hook in \"Complain-Type Test\"",
              "timedOut": null,
              "duration": 2139,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "driver = new Builder()\n  .forBrowser(\"chrome\")\n  .setChromeOptions(new chrome.Options().headless())\n  .build();\nawait driver.manage().window().setRect({ width: 1920, height: 1080 });",
              "err": {},
              "uuid": "8935116c-8488-476f-a1a2-7b9b94848f50",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Complain-Type Test\"",
              "fullTitle": "Complain-Type Test \"after all\" hook in \"Complain-Type Test\"",
              "timedOut": null,
              "duration": 37,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "await driver.quit();",
              "err": {},
              "uuid": "d3ffebe9-070f-46b3-a83a-866d1f4da046",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Add Complaint-Test 551",
              "fullTitle": "Complain-Type Test Add Complaint-Test 551",
              "timedOut": null,
              "duration": 17032,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  await driver.get(\"https://demo.ejalas.com/login\");\n  await login(driver);\n  await driver.get(\"https://demo.ejalas.com/admin/complaint-type\");\n  // get the length of the table\n  const tableDataLength = (await driver.findElements(By.css(\"tbody tr\")))\n    .length;\n  // select the input element\n  // issue type element.\n  await driver\n    .findElement(By.id(\"courtName\"))\n    .sendKeys(\"This is a demo test issue\");\n  await driver\n    .findElement(By.className(\"common-court-btn btn btn-success\"))\n    .click();\n  // check the issue if added to the list or not.\n  // it will be contained at the last of the table.\n  const lastElement = await driver.wait(\n    until.elementLocated(By.css(\"tbody tr:last-child\")),\n    3000\n  );\n  console.log(await lastElement.getText());\n  // check if the length has been increase in the table if yes then the\n  // data has been added\n  const newTableDataLength = await driver.findElements(By.css(\"tbody tr\"));\n  if (newTableDataLength == tableDataLength)\n    throw new Error(\"The Data was not added\");\n} catch (err) {\n  throw new Error(err);\n}",
              "err": {},
              "uuid": "5effee0a-d5a4-4769-8693-49b1141b4281",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit Complain-Test 552",
              "fullTitle": "Complain-Type Test Edit Complain-Test 552",
              "timedOut": null,
              "duration": 8820,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  await driver.get(\"https://demo.ejalas.com/admin/complaint-type\");\n  // target the element that we want to modify\n  // target the last table data because it contains the latest data\n  const lastElement = await driver.wait(\n    until.elementLocated(By.css(\"tbody tr:last-child\"))\n  );\n  const text = await lastElement.findElement(By.css(\"td\")).getText();\n  // click edit btn\n  const editBtn = await lastElement.findElement(\n    By.css(\"td:nth-child(3) a\")\n  );\n  await driver.executeScript(\"arguments[0].click()\", editBtn);\n  // now do the modification that you want and submit.\n  await driver.findElement(By.id(\"courtName\")).sendKeys(\" modification\");\n  // submit\n  await driver\n    .findElement(By.className(\"common-court-btn btn btn-success\"))\n    .click();\n  // check if the data has been modified or not\n  const modifiedLastElement = await driver.wait(\n    until.elementLocated(By.css(\"tbody tr:last-child\"))\n  );\n  const modifiedText = await modifiedLastElement\n    .findElement(By.css(\"td\"))\n    .getText();\n  console.log(text);\n  console.log(modifiedText);\n  // if modified text and the previous text is same then the data was not updated\n  if (modifiedText == text) throw new Error(\"Data was not modified\");\n} catch (err) {\n  throw new Error(err);\n}",
              "err": {},
              "uuid": "e71bb61f-8f54-481e-8901-041b5a9633f8",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5effee0a-d5a4-4769-8693-49b1141b4281",
            "e71bb61f-8f54-481e-8901-041b5a9633f8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 25852,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "fa78ed6e-8a83-40c0-8c8d-068d24b773f9",
          "title": "Home Page component Test",
          "fullFile": "D:\\EJALAS_TESTING\\tests\\homePage.test.js",
          "file": "\\tests\\homePage.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Home Page component Test\"",
              "fullTitle": "Home Page component Test \"before all\" hook in \"Home Page component Test\"",
              "timedOut": null,
              "duration": 2187,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "driver = new Builder()\n  .forBrowser(\"chrome\")\n  .setChromeOptions(new chrome.Options().headless())\n  .build();\nawait driver.manage().window().setRect({ width: 1920, height: 1080 });",
              "err": {},
              "uuid": "6679fe23-f5fc-432b-9f96-d57d8879295b",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Home Page component Test\"",
              "fullTitle": "Home Page component Test \"after all\" hook in \"Home Page component Test\"",
              "timedOut": null,
              "duration": 47,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "await driver.quit();",
              "err": {},
              "uuid": "26f0cd7f-f095-4eb3-aa4d-d43f8cd20000",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "home-page-test 350",
              "fullTitle": "Home Page component Test home-page-test 350",
              "timedOut": null,
              "duration": 7734,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  await driver.get(\"https://demo.ejalas.com/\");\n  // check if the date is displayed or not\n  const date = await driver.findElement(By.css(`.date span iframe`));\n  if (!date.isDisplayed())\n    throw new Error(\"The date is not displayed in home page\");\n  // home page broken image test.\n  await brokenImageTest(driver, \"https://demo.ejalas.com\");\n  const marquee = await driver.findElement(\n    By.xpath(`//*[@id=\"header-wrapper\"]/div/div[2]/div/marquee`)\n  );\n  // first check if the marquee if displayed or not\n  if (!(await marquee.isDisplayed()))\n    throw new Error(\"The marquee element/news slide is not displayed\");\n  // now check if the text message inside is present or not?\n  const marqueeText = await marquee.findElement(By.css(\"ul\")).getText();\n  if (marqueeText == 0)\n    throw new Error(\"The news-slide content is not displayed\");\n} catch (err) {\n  throw new Error(err);\n}",
              "err": {},
              "uuid": "8bce3bbf-de12-411a-9379-3b858155566c",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "ujuri-case-search-result-fail-test 351",
              "fullTitle": "Home Page component Test ujuri-case-search-result-fail-test 351",
              "timedOut": null,
              "duration": 6565,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  await driver.get(\"https://demo.ejalas.com/tarikh\");\n  // target the input to search for the case number\n  // assume the case number is 123 which does not exists should give us error message\n  await driver.findElement(By.css(`form input`)).sendKeys(\"123\");\n  //target the button and search for it.\n  // here we should get the error message because we have an unregister case number\n  await driver.findElement(By.css(\"button\")).click();\n  // check if the error message pop up or not.\n  const errorElement = await driver.wait(\n    until.elementLocated(By.className(\"text-center alert alert-danger\"))\n  );\n  const errorText = await errorElement.getText();\n  if (errorText != \"मुद्दा नं को तारिख उपलब्ध छैन\")\n    throw new Error(\"Error in getting the error element\");\n  console.log(errorText);\n} catch (err) {\n  throw new Error(err);\n}",
              "err": {},
              "uuid": "beadf957-e540-4bb5-8ef1-1eaab370295e",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "ujuri-case-search-result-success-test 352",
              "fullTitle": "Home Page component Test ujuri-case-search-result-success-test 352",
              "timedOut": null,
              "duration": 6532,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  const code = \"sfj\";\n  await driver.get(\"https://demo.ejalas.com/tarikh\");\n  // target the input to search for the case number\n  // assume the case number is 123 which does not exists should give us error message\n  await driver.findElement(By.css(`form input`)).sendKeys(code);\n  //target the button and search for it.\n  // here we should get the error message because we have an unregister case number\n  await driver.findElement(By.css(\"button\")).click();\n  // here the case number is valid so it should contain some information except the error message\n  const tableElement = await driver.wait(\n    until.elementLocated(By.css(\"tbody tr\"))\n  );\n  const codeNumber = await tableElement\n    .findElement(By.css(\"td:last-child\"))\n    .getText();\n  if (codeNumber != code)\n    throw new Error(\n      \"The expected ujuri result didn't match with the code that we input\"\n    );\n} catch (err) {\n  throw new Error(err);\n}",
              "err": {},
              "uuid": "63713176-9065-49cd-b330-8ca6aa973087",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "home-page about-us 353",
              "fullTitle": "Home Page component Test home-page about-us 353",
              "timedOut": null,
              "duration": 2566,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  await driver.get(\"https://demo.ejalas.com/hamro-barema\");\n  const textContainer = await driver.findElement(\n    By.className(\"hamro-barema-container\")\n  );\n  // check if the container is displayed or not.\n  if (!(await textContainer.isDisplayed()))\n    throw new Error(\"The container is not displayed in the page.\");\n  // check if the text is empty or not.\n  const text = await textContainer.getText();\n  if (text == \"\") throw new Error(\"The content in the page is not shown\");\n  console.log(await textContainer.getText());\n} catch (err) {\n  throw new Error(err);\n}",
              "err": {},
              "uuid": "b93232a9-4f7b-4449-bce4-0aa14121783e",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "conflict look-up test 354",
              "fullTitle": "Home Page component Test conflict look-up test 354",
              "timedOut": null,
              "duration": 7758,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const obj = {\n  select: \"जग्गा मिचि भवन निर्माण\",\n  date: \"2080-04-24\",\n};\nawait driver.get(\"https://demo.ejalas.com/index\");\n// first select the type of the type of case\nconst selectElement = await driver.findElement(\n  By.id(\"inlineFormCustomSelect\")\n);\nconst select = new Select(selectElement);\nselect.selectByVisibleText(obj.select);\n// now select the date of register case.\nawait driver\n  .findElement(By.className(\"nepali-datepicker ndp-nepali-calendar\"))\n  .sendKeys(obj.date);\n//submit the detail\nconst submitBtn = await driver.findElement(\n  By.className(\"common-case-btn section-content-item\")\n);\nawait driver.wait(until.elementIsVisible(submitBtn), 10000);\nawait driver.executeScript(\"arguments[0].click();\", submitBtn);\n// result will show according to the detail provided\n// check for the result\nconst targetElement = await driver.findElements(By.css(`tbody tr`));\n// check if the data is present or not it should not be empty\nconsole.log(targetElement.length);\nif (targetElement == 0)\n  throw new Error(\"The search result didn't match for the given input\");\nawait driver.sleep(3000);",
              "err": {},
              "uuid": "ab1235ee-132f-42aa-8876-dcd091c3d106",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8bce3bbf-de12-411a-9379-3b858155566c",
            "beadf957-e540-4bb5-8ef1-1eaab370295e",
            "63713176-9065-49cd-b330-8ca6aa973087",
            "b93232a9-4f7b-4449-bce4-0aa14121783e",
            "ab1235ee-132f-42aa-8876-dcd091c3d106"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 31155,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "4e6f33a0-4651-4c4f-b71a-a716b19c0e72",
          "title": "ward-wise-pratiwedan",
          "fullFile": "D:\\EJALAS_TESTING\\tests\\report.test.js",
          "file": "\\tests\\report.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"ward-wise-pratiwedan\"",
              "fullTitle": "ward-wise-pratiwedan \"before all\" hook in \"ward-wise-pratiwedan\"",
              "timedOut": null,
              "duration": 546,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "driver = new Builder().forBrowser(\"chrome\").build();",
              "err": {},
              "uuid": "65bf542b-a3d8-4ec2-a817-1b15b607bf4c",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"ward-wise-pratiwedan\"",
              "fullTitle": "ward-wise-pratiwedan \"after all\" hook in \"ward-wise-pratiwedan\"",
              "timedOut": null,
              "duration": 85,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "await driver.quit();",
              "err": {},
              "uuid": "709c6e6d-63c6-4585-8da6-a067ab5721ba",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "pratiwedan-report-download-test 103",
              "fullTitle": "ward-wise-pratiwedan pratiwedan-report-download-test 103",
              "timedOut": null,
              "duration": 13242,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.get(\"https://demo.ejalas.com/login\");\n// login\nawait login(driver);\n//navigate to the pratiwedan endpoint\nawait driver.get(\"https://demo.ejalas.com/admin/ward-wise-pratiwedan\");\n// download the file by navigating to the ui button\nconst downloadBtn = await driver.findElement(\n  By.css(\".form-group.row div:last-child\")\n);\nawait downloadBtn.findElement(By.css(\"button\")).click();\n// now check in the downloads section of the file to see if file is downloaded or not\nconst downloadedFileName = await driver.wait(async () => {\n  const files = fs.readdirSync(\"C:/Users/ACER/Downloads\");\n  return files.find((file) => file.startsWith(\"ward-wise-pratiwedan.xlsx\"));\n}, 10000);\n// now check is the file path exists or not\nconst downloadFilePath = path.join(\n  \"C:/Users/ACER/Downloads\",\n  downloadedFileName\n);\nconst fileExists = fs.existsSync(downloadFilePath);\nif (!fileExists) throw new Error(\"File Downloaded Failed\");",
              "err": {},
              "uuid": "a4aea4c9-b8e9-4b36-8da6-97ffa8f42469",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a4aea4c9-b8e9-4b36-8da6-97ffa8f42469"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13242,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "be006c80-f592-43b3-8e3a-4adb22757501",
          "title": "Judiciary Committee Test",
          "fullFile": "D:\\EJALAS_TESTING\\tests\\judiciaryCommittee.test.js",
          "file": "\\tests\\judiciaryCommittee.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Judiciary Committee Test\"",
              "fullTitle": "Judiciary Committee Test \"before all\" hook in \"Judiciary Committee Test\"",
              "timedOut": null,
              "duration": 2160,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "driver = new Builder()\n  .forBrowser(\"chrome\")\n  .setChromeOptions(new chrome.Options().headless())\n  .build();\nawait driver.manage().window().setRect({ width: 1920, height: 1080 });",
              "err": {},
              "uuid": "4197ad75-242b-4596-b69c-cd4f308cb23e",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Judiciary Committee Test\"",
              "fullTitle": "Judiciary Committee Test \"after all\" hook in \"Judiciary Committee Test\"",
              "timedOut": null,
              "duration": 43,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "await driver.quit();",
              "err": {},
              "uuid": "397a5ef0-b04b-44cd-97c2-842cbac30aea",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Addition of judiciary Committee Test 305",
              "fullTitle": "Judiciary Committee Test Addition of judiciary Committee Test 305",
              "timedOut": null,
              "duration": 17038,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  await driver.get(\"https://demo.ejalas.com/login\");\n  // login.\n  await login(driver);\n  await driver.get(\"https://demo.ejalas.com/admin/court\");\n  // here the input element is a div tag\n  const inputELements = await driver.findElements(By.className(\"col-md-3\"));\n  for (let i = 0; i < inputELements.length; i++) {\n    // the first one is the input field and other is to be selected from the option element\n    if (i == 0) {\n      const input = await inputELements[0].findElement(By.css(\"input\"));\n      await input.sendKeys(obj[0]);\n    } else {\n      // remaining 3 of them are a select option so selecting one of them\n      // first target the select element\n      const selectElement = await inputELements[i].findElement(\n        By.css(\"select\")\n      );\n      const select = new Select(selectElement);\n      select.selectByIndex(0);\n    }\n  }\n  // submit the data that we added.\n  await driver\n    .findElement(By.className(\"common-court-btn btn btn-success\"))\n    .click();\n  // get the last element of the table body\n  // to check if the element is added or not\n  const lastElement = await driver.wait(\n    until.elementLocated(By.css(\"tbody tr:last-child\")),\n    3000\n  );\n  // target the tbody to check the length of tr\n  const tbody = await driver.findElements(By.css(\"tbody tr\"));\n  const thText = await lastElement.findElement(By.css(\"th\")).getText();\n  // gets the data in array format\n  const tdText = (\n    await lastElement.findElement(By.css(\"td\")).getText()\n  ).split();\n  console.log(tdText, thText);\n  if (tdText[0] != obj[0] && tbody.length != thText) {\n    throw new Error(\n      \"The content didn't match with the input or the index was not matched with the table index\"\n    );\n  }\n} catch (err) {\n  throw new Error(err);\n}",
              "err": {},
              "uuid": "86cd66c3-0422-4022-99ea-29dd9e1d1092",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit Judicial Committee Test 306",
              "fullTitle": "Judiciary Committee Test Edit Judicial Committee Test 306",
              "timedOut": null,
              "duration": 14666,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.get(\"https://demo.ejalas.com/admin/court\");\n//click the edit button\nawait driver\n  .findElement(\n    By.xpath(\n      `//*[@id=\"content-wrapper\"]/section[2]/div[2]/section/div[3]/div/table/tbody/tr[1]/td[5]/a`\n    )\n  )\n  .click();\n// now modify the data\n// target the input and change the data.\nconst inputELements = await driver.findElements(By.className(\"col-md-3\"));\n//input text.\nconst inputText = `test modified ${Math.floor(Math.random() * 10)}`;\nfor (let i = 0; i < inputELements.length; i++) {\n  // the first one is the input field and other is to be selected from the option element\n  if (i == 0) {\n    const input = await inputELements[0].findElement(By.css(\"input\"));\n    await input.clear();\n    await input.sendKeys(inputText);\n  } else {\n    // remaining 3 of them are a select option so selecting one of them\n    // first target the select element\n    const selectElement = await inputELements[i].findElement(\n      By.css(\"select\")\n    );\n    const select = new Select(selectElement);\n    select.selectByIndex(0);\n  }\n}\n// submit the edited data.\nawait driver\n  .findElement(By.className(\"common-court-btn btn btn-success\"))\n  .click();\n// check if the data has been chanced or not.\nconst modifiedDataElement = await driver.findElement(\n  By.xpath(\n    `//*[@id=\"content-wrapper\"]/section[2]/div[2]/section/div[3]/div/table/tbody/tr[1]`\n  )\n);\nconst inputDataElement = await modifiedDataElement.findElement(\n  By.xpath(`//tr/td[1]`)\n);\nconst latestModifiedText = await inputDataElement.getText();\nif (latestModifiedText != inputText)\n  throw new Error(\"Modification un-successful\");\nconsole.log(\"Ok\");\nawait driver.sleep(5000);",
              "err": {},
              "uuid": "7592887b-ade4-44ab-b2e0-eb19c331ae23",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "86cd66c3-0422-4022-99ea-29dd9e1d1092",
            "7592887b-ade4-44ab-b2e0-eb19c331ae23"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 31704,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "92387c69-e452-4a98-ac22-be69d06ee077",
          "title": "user-role",
          "fullFile": "D:\\EJALAS_TESTING\\tests\\userRole.test.js",
          "file": "\\tests\\userRole.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"user-role\"",
              "fullTitle": "user-role \"before all\" hook in \"user-role\"",
              "timedOut": null,
              "duration": 496,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "driver = new Builder()\n  .forBrowser(\"chrome\")\n  .setChromeOptions(new chrome.Options().headless())\n  .build();",
              "err": {},
              "uuid": "10f84936-4503-426d-a98d-8b350f7e5274",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"user-role\"",
              "fullTitle": "user-role \"after all\" hook in \"user-role\"",
              "timedOut": null,
              "duration": 33,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "await driver.quit();",
              "err": {},
              "uuid": "6ea65552-9aee-4435-93bf-73059ec0414f",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "user-role-add-test 201",
              "fullTitle": "user-role user-role-add-test 201",
              "timedOut": null,
              "duration": 12316,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// first login to the page before starting the test\nawait driver.get(\"https://demo.ejalas.com/login\");\nawait login(driver);\nawait driver.get(\"https://demo.ejalas.com/admin/role\");\n// add the input tag enter name of role and submit\nconst inputELement = await driver.findElement(By.id(\"name\"));\nawait inputELement.sendKeys(role);\n// submit\nawait driver\n  .findElement(By.className(\"common-court-btn btn btn-success\"))\n  .click();\n// check at the last of the table body if the role has been added or not\nconst lastElement = await driver.wait(\n  until.elementLocated(By.css(\"tbody tr:last-child\"))\n);\n// now check if the user input role name is matched\nconst data = await lastElement\n  .findElement(By.css(`td:nth-child(2)`))\n  .getText();\nif (data != role) throw new Error(\"The user role is not added.\");",
              "err": {},
              "uuid": "a39b21e2-fafe-4980-86b3-0243435b7629",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "user-role-test-edit 202",
              "fullTitle": "user-role user-role-test-edit 202",
              "timedOut": null,
              "duration": 6152,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.get(\"https://demo.ejalas.com/admin/role\");\n// edit the role\nconst element = await driver.findElement(By.css(\"tbody tr:last-child\"));\nconst editButtonWrapper = await element.findElement(\n  By.css(\"td:nth-child(3)\")\n);\nconst editBtn = await editButtonWrapper.findElement(By.css(`a`));\nawait driver.executeScript(\"arguments[0].click();\", editBtn);\n// target the input field and edit accordingly\nconst input = await driver.findElement(By.id(\"name\"));\nawait input.clear();\nawait input.sendKeys(role_edit);\n// now submit the change\nconst button = await driver.findElement(By.css(\"button\"));\nawait driver.executeScript(\"arguments[0].click();\", button);\n// now check if the edited section has been reflected or not\nconst lastElement = await driver.findElement(By.css(\"tbody tr:last-child\"));\nconst text = await lastElement\n  .findElement(By.css(\"td:nth-child(2)\"))\n  .getText();\nif (text != role_edit) throw new Error(\"The user role is not updated\");",
              "err": {},
              "uuid": "9d72d78b-f1f2-4f0d-a0a1-2df8063ceff7",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a39b21e2-fafe-4980-86b3-0243435b7629",
            "9d72d78b-f1f2-4f0d-a0a1-2df8063ceff7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 18468,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}